!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
DOMZERO	backend.h	25;"	d
IDD_SERVICE_CONNECT	backend.h	27;"	d
IDD_SERVICE_DISCONNECT	backend.h	29;"	d
IDD_SERVICE_READY	backend.h	28;"	d
IDD_SERVICE_REGISTER	backend.h	30;"	d
IDD_SERVICE_UNREGISTER	backend.h	31;"	d
IDD_SYSID_CURRENT	backend.h	36;"	d
IDD_SYSID_ONE	backend.h	34;"	d
_IDD_BACKEND_H	backend.h	2;"	d
__this_module	backend.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__used	backend.mod.c	/^__used$/;"	v	file:
__used	backend.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
action	backend.h	/^        int action;$/;"	m	struct:shared_data
back_ring	backend.h	/^	struct idd_back_ring  back_ring;$/;"	m	struct:backend_info	typeref:struct:backend_info::idd_back_ring
back_ring_gref	backend.h	/^	uint32_t back_ring_gref;$/;"	m	struct:backend_info
back_ring_gref	backend.h	/^	uint32_t back_ring_gref;$/;"	m	struct:idd_connect
backend	backend.c	/^static backend_info_t backend;$/;"	v	file:
backend_info	backend.h	/^typedef struct backend_info {$/;"	s
backend_info_t	backend.h	/^} backend_info_t;$/;"	t	typeref:struct:backend_info
blk_cleanup	backend.c	/^module_exit(blk_cleanup);$/;"	v
blk_cleanup	backend.c	/^static void blk_cleanup(void)$/;"	f	file:
blk_init	backend.c	/^module_init(blk_init);$/;"	v
blk_init	backend.c	/^static int blk_init(void)$/;"	f	file:
domid	backend.h	/^	uint32_t domid;$/;"	m	struct:idd_connect
expand_tgid	backend.h	/^        uint32_t expand_tgid;                   $/;"	m	struct:shared_data
front_ring	backend.h	/^	struct idd_front_ring front_ring;$/;"	m	struct:backend_info	typeref:struct:backend_info::idd_front_ring
front_ring_gref	backend.h	/^	uint32_t front_ring_gref;$/;"	m	struct:backend_info
front_ring_gref	backend.h	/^	uint32_t front_ring_gref;$/;"	m	struct:idd_connect
grefs	backend.h	/^        uint32_t grefs[1];$/;"	m	struct:shared_data
grefs_num	backend.h	/^        uint32_t grefs_num;             $/;"	m	struct:shared_data
idd_alloc_shared	backend.c	/^static void *idd_alloc_shared(uint32_t *gref)$/;"	f	file:
idd_connect	backend.h	/^typedef struct idd_connect{$/;"	s
idd_connect_t	backend.h	/^}idd_connect_t;$/;"	t	typeref:struct:idd_connect
idd_free_shared	backend.c	/^static void idd_free_shared(uint32_t gref, void *addr)$/;"	f	file:
idd_request	backend.h	/^struct idd_request {$/;"	s
idd_response	backend.h	/^struct idd_response {$/;"	s
irq_ring_interrupt	backend.c	/^static irqreturn_t irq_ring_interrupt(int irq, void *dev_id)$/;"	f	file:
list_lock	backend.h	/^        struct spinlock list_lock;$/;"	m	struct:backend_info	typeref:struct:backend_info::spinlock
main	backend.h	/^	shared_data_t   *main;$/;"	m	struct:backend_info
main_avail	backend.h	/^        int main_avail;$/;"	m	struct:backend_info
main_gref	backend.h	/^	uint32_t main_gref;$/;"	m	struct:backend_info
main_gref	backend.h	/^	uint32_t main_gref;$/;"	m	struct:idd_connect
main_irq	backend.h	/^        int main_irq;$/;"	m	struct:backend_info
main_port	backend.h	/^	uint32_t main_port;$/;"	m	struct:idd_connect
main_queue	backend.h	/^        wait_queue_head_t main_queue;$/;"	m	struct:backend_info
main_sem	backend.h	/^        struct semaphore main_sem;$/;"	m	struct:backend_info	typeref:struct:backend_info::semaphore
main_thread	backend.h	/^	struct task_struct *main_thread;$/;"	m	struct:backend_info	typeref:struct:backend_info::task_struct
num	backend.h	/^        uint32_t num;$/;"	m	struct:shared_data
pad	backend.h	/^	char            pad[8]; \/* Just a stub *\/$/;"	m	struct:idd_request
ptgid	backend.h	/^        uint32_t ptgid;$/;"	m	struct:shared_data
request_avail	backend.h	/^        int request_avail;$/;"	m	struct:backend_info
request_queue	backend.h	/^        wait_queue_head_t request_queue;$/;"	m	struct:backend_info
request_thread	backend.h	/^	struct task_struct *request_thread;$/;"	m	struct:backend_info	typeref:struct:backend_info::task_struct
res	backend.h	/^	int                     res;$/;"	m	struct:idd_response
ring_irq	backend.h	/^        int ring_irq;$/;"	m	struct:backend_info
ring_lock	backend.h	/^        struct spinlock ring_lock;$/;"	m	struct:backend_info	typeref:struct:backend_info::spinlock
ring_port	backend.h	/^	uint32_t ring_port;$/;"	m	struct:idd_connect
shared_data	backend.h	/^typedef struct shared_data {$/;"	s
shared_data_t	backend.h	/^} shared_data_t;$/;"	t	typeref:struct:shared_data
tgid	backend.h	/^        uint32_t tgid;$/;"	m	struct:shared_data
